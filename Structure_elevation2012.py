# House ground elevation
# Created on: 2018-02-22 10:12:09.00000
#   (generated by ArcGIS/ModelBuilder)
# Description: 
# ---------------------------------------------------------------------------

# Set the necessary product code
# import arcinfo



#import system modules

import arcpy
from arcpy import env
import os
import time
import sys


#Since the elevating can take 1-4 feet or a whole floor, we want to measure the elevation difference in feet. Thus, we convert the raster unit into feet, and make them interger


outputroot="D:\\UConn2\\Circa\\Strelev12_P\\"
temp="D:\\UConn2\\Circa\\Strelev12_P\\temp\\"
gdb="D:\UConn2\Circa\GISdata\CIRCA.gdb\\"

# Local variables:
EL_p_shp = "D:\\UConn2\\Circa\\GISdata\\Building_VA_oneunit.shp"
Elevate=["2012"]

# Make a layer from the feature class
arcpy.Delete_management("lyr", "")
arcpy.MakeFeatureLayer_management(EL_p_shp, "lyr") 
StartTime0=time.clock()
for EL in Elevate:
 el_tif="J:\LiDAR\CoastCTLidar.gdb\coast"+EL+"LIS_Int"
 elpoly=gdb+"elpolyStr_"+EL   

 #Process: Raster to Polygon
 #arcpy.RasterToPolygon_conversion(el_tif, elpoly, "NO_SIMPLIFY", "Value")
 for n in range(24281,48256):
   StartTime = time.clock()
   
   groundel_n = outputroot+"GEL_"+str(n)+"_"+EL+".shp"
   polytemp_n = temp+"Poly_"+str(n)+".shp"
   
   # Select 
   arcpy.SelectLayerByAttribute_management("lyr", "New_SELECTION", '"fid" = '+str(n))
   # Creat a temporate polygon for the selected house
   arcpy.FeatureClassToFeatureClass_conversion("lyr", temp, "Poly_"+str(n)+".shp")
   # Process: Intersect
   arcpy.Intersect_analysis(polytemp_n+" #;"+elpoly+" #", groundel_n, "ALL", "", "INPUT")
   
   arcpy.AddGeometryAttributes_management(groundel_n, "AREA_GEODESIC", "FEET_US", "SQUARE_FEET_US", "GEOGCS['GCS_North_American_1983',DATUM['D_North_American_1983',SPHEROID['GRS_1980',6378137.0,298.257222101]],PRIMEM['Greenwich',0.0],UNIT['Degree',0.0174532925199433]]")
   
   # Process: Delete
   arcpy.Delete_management(polytemp_n, "")
   StopTime1 = time.clock()
   elapsedTime=(StopTime1-StartTime)
   print 'Time for calculating feature '+str(n)+' for period '+EL+' is: '+ str(round(elapsedTime, 1))+ ' seconds'


StopTime2 = time.clock()
elapsedTime1=(StopTime2-StartTime0)/60
print 'Time for all the analysis is: '+ str(round(elapsedTime1, 1))+ ' minites'
